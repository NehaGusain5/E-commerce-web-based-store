# Cursor Rules

##Instructions
- Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section.
- Organize thoughts and plan steps before starting a task in the `Scratchpad` section.
- Clear old tasks if necessary.
- Use todo markers for progress tracking:
  - `[X]` Completed tasks
  - `[ ]` Pending tasks
- Update Scratchpad after completing subtasks.
- Reflect and plan after milestones for better task management.
- Always refer to Scratchpad before planning the next step.

##Scratchpad
{
  "scratchpad": [
    "# CloudCart E-commerce Development Steps",
    "",
    "## 1. Project Setup and Configuration",
    "- Initialize Next.js 15 project with TypeScript",
    "- Set up project structure and organization",
    "- Configure ESLint and Prettier",
    "- Install and configure required dependencies:",
    "  - UI: shadcn/ui, lucide-react",
    "  - State Management: zustand",
    "  - Forms & Validation: react-hook-form, zod",
    "  - Authentication: next-auth@beta",
    "  - Database: prisma, postgresql",
    "  - File Upload: uploadthing",
    "  - Email: resend",
    "  - Charts: recharts",
    "  - Payments: stripe",
    "",
    "## 2. Database Schema and Authentication",
    "- Design and implement Prisma schema for:",
    "  - Users (customers and admins)",
    "  - Products (with categories)",
    "  - Orders",
    "  - Reviews",
    "  - Cart items",
    "  - Wishlist",
    "- Set up NextAuth.js with multiple providers",
    "- Implement role-based authentication",
    "",
    "## 3. Core Features - Customer Frontend",
    "- Create responsive layout with shadcn/ui",
    "- Implement navigation and routing",
    "- Build homepage with:",
    "  - Featured products",
    "  - Categories showcase",
    "  - Special offers",
    "- Create product listing pages with:",
    "  - Filtering",
    "  - Sorting",
    "  - Pagination",
    "- Build product detail pages",
    "- Implement search functionality",
    "- Add shopping cart features",
    "- Create wishlist functionality",
    "- Build checkout process with Stripe",
    "",
    "## 4. User Features",
    "- User registration and login",
    "- Profile management",
    "- Order history",
    "- Review and rating system",
    "- Address management",
    "- Email notifications using Resend",
    "",
    "## 5. Admin Dashboard",
    "- Create admin layout with shadcn/ui",
    "- Implement admin authentication",
    "- Build dashboard overview with Recharts:",
    "  - Sales analytics",
    "  - User statistics",
    "  - Order metrics",
    "- Product management:",
    "  - CRUD operations",
    "  - Image upload with Uploadthing",
    "  - Inventory management",
    "- Order management system",
    "- Customer management",
    "- Category management",
    "- Reviews moderation",
    "",
    "## 6. API Development",
    "- Design RESTful API structure",
    "- Implement API routes for:",
    "  - Products",
    "  - Orders",
    "  - Users",
    "  - Cart",
    "  - Reviews",
    "- Add API validation with Zod",
    "- Implement error handling",
    "",
    "## 7. State Management",
    "- Set up Zustand stores for:",
    "  - Shopping cart",
    "  - User preferences",
    "  - Admin dashboard state",
    "  - Filters and sorting",
    "",
    "## 8. Testing and Optimization",
    "- Write unit tests",
    "- Implement E2E testing",
    "- Optimize performance:",
    "  - Image optimization",
    "  - Code splitting",
    "  - SEO optimization",
    "- Implement error boundaries",
    "",
    "## 9. Deployment and CI/CD",
    "- Set up CI/CD pipeline",
    "- Configure production environment",
    "- Deploy database",
    "- Set up monitoring and logging",
    "- Configure backup systems",
    "",
    "## 10. Documentation",
    "- Write API documentation",
    "- Create user guides",
    "- Document codebase",
    "- Write deployment instructions"
  ]
}